"use strict";var z=Object.create;var v=Object.defineProperty;var X=Object.getOwnPropertyDescriptor;var Z=Object.getOwnPropertyNames;var ee=Object.getPrototypeOf,te=Object.prototype.hasOwnProperty;var D=(r,e)=>{for(var t in e)v(r,t,{get:e[t],enumerable:!0})},N=(r,e,t,n)=>{if(e&&typeof e=="object"||typeof e=="function")for(let i of Z(e))!te.call(r,i)&&i!==t&&v(r,i,{get:()=>e[i],enumerable:!(n=X(e,i))||n.enumerable});return r};var O=(r,e,t)=>(t=r!=null?z(ee(r)):{},N(e||!r||!r.__esModule?v(t,"default",{value:r,enumerable:!0}):t,r)),ne=r=>N(v({},"__esModule",{value:!0}),r);var fe={};D(fe,{AmqpSdk:()=>C,EventsWorker:()=>d,VHOST:()=>f,amqpSdk:()=>F,eventsWorker:()=>g,executionDataHelper:()=>R,flowConsumer:()=>M,flowHelpers:()=>A,flowInterpreter:()=>Q,rpcRequest:()=>I});module.exports=ne(fe);var $=require("amqp-connection-manager");var H=require("uuid"),x=class{constructor(e={}){this.config={retryDelay:e.retryDelay??(process.env.SEQ_QUEUE_RETRY_DELAY?Number(process.env.SEQ_QUEUE_RETRY_DELAY):100),retryAttempts:e.retryAttempts??(process.env.SEQ_QUEUE_RETRY_ATTEMPTS?Number(process.env.SEQ_QUEUE_RETRY_ATTEMPTS):5)},this.callbacks={},this.results={},this.items=[],this.running=!1}deleteCurrentItem(){let e=this.items.shift();e&&(delete this.callbacks[e],delete this.results[e])}async runWithRetries(e){let t=this.items[0];try{let n=await this.callbacks[t]();this.results[t].resolve(n),this.deleteCurrentItem(),this.run().catch(i=>{console.error("Error during scheduling callback",i)})}catch(n){e<this.config.retryAttempts?(console.error(`Error during executing queue task (attempt: ${e})`,n),await new Promise(i=>setTimeout(i,this.config.retryDelay)),this.runWithRetries(e+1).catch(i=>{console.error("Error during scheduling callback",i)})):(console.error("Reached maximum queue retry attempts",n),this.results[t].reject(n),this.deleteCurrentItem(),this.run().catch(i=>{console.error("Error during scheduling callback",i)}))}}async run(){this.running=!0,this.items.length>0?await this.runWithRetries(1):this.running=!1}add(e){let t=(0,H.v4)();return this.callbacks[t]=e,this.items.push(t),this.running||this.run().catch(n=>{console.error("Error during scheduling callback",n)}),new Promise((n,i)=>this.results[t]={resolve:n,reject:i})}};var f=(n=>(n.RESULTS="results",n.ACTIONS="actions",n.EVENTS="events",n))(f||{});var re=process.env.AMQP_CONNECTION_TIMEOUT||6e4,C=class{constructor(){this.connection={};this.channel={};this.consumerTag={["actions"]:{},["results"]:{},["events"]:{}};this.opts={};this.queues={["actions"]:[],["results"]:[],["events"]:[]};this.existingConsumers={["actions"]:{},["results"]:{},["events"]:{}};this.seqQueue=new x}getAmqpUri(e){switch(e){case"actions":return process.env.AMQP_URI_ACTIONS;case"events":return process.env.AMQP_URI_EVENTS;case"results":return process.env.AMQP_URI_RESULTS}}checkConnection(e){if(!this.channel[e])throw new Error("Connection not created")}async checkIfQueueExists(e,t){return this.channel[t].checkQueue(e)}async connectToAMQP(e){console.info(`Establishing connection to vhost ${e}`);let t=(0,$.connect)(this.getAmqpUri(e),{connectionOptions:this.opts.connectionOptions});if(t)try{await Promise.race([new Promise((n,i)=>setTimeout(()=>i(),Number(re))),new Promise(n=>{t.addListener("connect",()=>{console.info(`Rabbit successfully connected to vhost: "${e}"`),n()}),t.addListener("connectFailed",()=>{console.info(`Rabbit failed to connect to vhost: "${e}"`),process.exit(-2)}),t.addListener("disconnect",()=>{console.warn(`Rabbit disconnected from vhost: "${e}"`)}),t.addListener("blocked",()=>{console.warn(`Rabbit connection blocked on vhost: "${e}"`)}),t.addListener("unblocked",()=>{console.info(`Rabbit connection unblocked on vhost: "${e}"`)})})]),this.connection[e]=t}catch{console.error(`Rabbit connection timeout. Could not connect to vhost ${e}. Check connection details`),process.exit(-2)}else console.error(`Connection to vhost ${e} was not created!`),process.exit(-3);return t}async amqpConnect(e,t){let n=await this.connectToAMQP(e);if(n)return new Promise((i,o)=>{let a=n.createChannel({json:!0,setup:async s=>{if(s){this.channel[e]=s,t&&await t();for(let p in this.existingConsumers[e])await this.consume(this.existingConsumers[e][p]);for(let p of this.queues[e])this.sendToQueue(p);this.queues[e]=[],i(n)}o()}});a.addListener("connect",()=>{console.info(`Rabbit successfully connected to channel for vhost: "${e}"`)}),a.addListener("error",()=>{console.error(`Rabbit failed to connect to channel for vhost: "${e}"`)}),a.addListener("close",()=>{console.warn(`Rabbit connection to vhost: "${e}" channel has closed!"`)})});throw new Error("Could not connect to AMQP queue!")}async connectAndInit(e,t){(await this.amqpConnect(e,t)).on("close",()=>{console.error(`Lost AMQP connection with vhost: "${e}". Trying to reconnect in a while.`)})}async connectToVHosts(e){for(let t of e)await this.connectAndInit(t)}async configure(e,t=["events","results","actions"]){this.opts={...e},await this.connectToVHosts(t)}async unsubscribe(e,t,n){if(this.checkConnection(e),!this.consumerTag[e][t]){if(n)return;throw new Error("Cannot unsubscribe from queue with undefined consumer")}await this.channel[e].cancel(this.consumerTag[e][t].consumerTag),delete this.existingConsumers[e][t],delete this.consumerTag[e][t]}sendToQueue({queue:e,vhost:t,data:n,opts:i={}}){this.checkConnection(t);try{return this.channel[t].sendToQueue(e,n,i)}catch(o){throw console.error(`Could not send message. Origin error: ${o.message}. Retrying when reconnected.`),this.queues[t].push({queue:e,vhost:t,data:n,opts:i}),o}}async consume({vhost:e,queue:t,prefetchValue:n=0,ack:i=!1,explicitAck:o=!1,callback:a}){this.checkConnection(e),this.existingConsumers[e][t]={vhost:e,queue:t,prefetchValue:n,ack:i,explicitAck:o,callback:a};let s=async u=>{if(u===null)throw new Error("Received null message, channel closed. Trying to reconnect");let c;try{c=JSON.parse(u.content.toString())}catch{throw new Error("Incorrect incoming AMQP data")}o?await a(c,{ack:()=>this.channel[e].ack(u)}):(await a(c,{}),i&&this.channel[e].ack(u))};if(!await this.checkIfQueueExists(t,e))throw new Error("Queue does not exist!");await this.seqQueue.add(async()=>{await this.channel[e].prefetch(n),this.consumerTag[e][t]=await this.channel[e].consume(t,u=>{s(u).catch(c=>{console.error(`Error during processing message on queue ${t}.`,c)})},{noAck:!i}),await this.channel[e].prefetch(0)})}async assertQueue(e,t,n){this.checkConnection(t),await this.channel[t].assertQueue(e,n)}async deleteQueue(e,t){this.checkConnection(t),await this.channel[t].deleteQueue(e)}},F=new C;var U=O(require("os")),d=class{constructor(){this.amqp=F}static parseQueue(e,t){let n=e;for(let[i,o]of Object.entries(t))n=n.replace(`{${i}}`,o);return n}async init(e,t){await this.amqp.configure(e,t)}async consume({vhost:e="events",queue:t,queueParams:n={},prefetchValue:i=0,ack:o=!1,explicitAck:a=!1,callback:s,queueOptions:p={}}){this.logging(`Asserting ${t} on vhost ${e} with params: $`,[n]);let u=d.parseQueue(t,n);await this.amqp.assertQueue(u,e,p),this.logging(`Consuming ${t} with prefetch: ${i}, ack: ${o}`),await this.amqp.consume({vhost:e,queue:u,prefetchValue:i,ack:o,explicitAck:a,callback:this.consumerCallback(s)})}async publish({queue:e,queueParams:t={},event:n,vhost:i="events",opts:o={},queueOptions:a={}}){this.logging(`Publishing on queue ${e}, params $ with event $ and opts $`,[t,n,o]);let s=Buffer.from(JSON.stringify(n)),p=d.parseQueue(e,t);await this.amqp.assertQueue(p,i,a),this.amqp.sendToQueue({queue:p,vhost:i,data:s,opts:o})}async unsubscribe({queue:e,queueParams:t={},vhost:n="events",allowNotSubscribed:i=!1}){this.logging(`Unsubscribing from queue ${e} with params $`,[t]);let o=d.parseQueue(e,t);await this.amqp.unsubscribe(n,o,i)}async deleteQueue({queue:e,queueParams:t={},vhost:n="events"}){this.logging(`Deleting queue ${e} with params $`,[t]);let i=d.parseQueue(e,t);await this.amqp.deleteQueue(i,n)}async registerConsumer({queue:e,consumer:t,vhost:n="events",prefetchValue:i=0,ack:o=!1}){await this.consume({queue:e,vhost:n,prefetchValue:i,ack:o,callback:async a=>{let s=await t(a);for(let p of s)await this.publish(p)}})}logging(e,t){if(process.env.LOGGING_VERBOSE==="true"){let n=0,i=t?e.replace(/\$/g,()=>JSON.stringify(t[n++],null,2)):e;console.debug(`${U.default.hostname()}: ${i}`)}}consumerCallback(e){return process.env.LOGGING_VERBOSE==="true"?(t,n)=>(this.logging("Consumer debug: $",[t]),e?e(t,n):()=>Promise.resolve()):e||(()=>Promise.resolve())}},g=new d;var E=O(require("lodash/get"));var A={};D(A,{applyInputMapping:()=>w,composition:()=>pe,condition:()=>se,flowTemplate:()=>q,parallel:()=>ue,param:()=>ae,queue:()=>V});var S=O(require("lodash/get"));function K(r){return r.type==="event"}function L(r){return r.type==="param"}function ie(r){return Array.isArray(r)}function oe(r){return r.type==="condition"}function _(r){return r.type==="composition"}function y(r,e,t){if(r.length===0)return t;let[n,...i]=r,o=y(i,e,t);if(_(n))return y(n.restFlow,e,o);if(oe(n)){let{queue:a,predicate:s,elseFlow:p,thenFlow:u}=n;return[{vhost:a.vhost,queue:a.queue,errorQueue:a.errorQueue,inputMapping:a.inputMapping,outputMapping:a.outputMapping,errorMapping:a.errorMapping,queueParams:a.queueParams,predicate:s,nextFlow:y(u,e,o),elseFlow:y(p??[],e,o),queueOptions:a.queueOptions}]}if(K(n)){let{queue:a,vhost:s,errorQueue:p,inputMapping:u,outputMapping:c,errorMapping:l,queueParams:T,queueOptions:m}=n;return[{queue:a,vhost:s,inputMapping:u,outputMapping:c,errorMapping:l,nextFlow:o,errorQueue:p,queueParams:T,queueOptions:m}]}if(L(n)){let a=e[n.name];return typeof a=="string"?[{queue:a,inputMapping:{},outputMapping:{},errorMapping:{},nextFlow:o}]:[{queue:a.queue,vhost:a.vhost,inputMapping:a.inputMapping,outputMapping:a.outputMapping,errorMapping:a.errorMapping,errorQueue:a.errorQueue,queueParams:a.queueParams,nextFlow:o}]}if(ie(n)){let a=y(i,e,t);return n.map(s=>y(s,e,a)).reduce((s,p)=>p?s.concat(p):s,[])}}function w(r,e={}){return Object.keys(e).reduce((t,n)=>{let i=e[n];return Array.isArray(i)?{...t,[n]:i.map(o=>(0,S.default)(r,o))}:{...t,[n]:(0,S.default)(r,i)}},{})}function q(r,...e){let t=r,n=e;_(r)&&(t=r.restFlow[0],n=[...r.restFlow.slice(1),...n]);let i=o=>({vhost:t.vhost,initQueue:t.queue,inputData:w(o.flowVariables,t.inputMapping),flowVariables:o.flowVariables,errorVariables:o.errorVariables,outputMapping:t.outputMapping,errorMapping:t.errorMapping,nextFlow:y(n,o.params),errorQueue:t.errorQueue,queueOptions:t.queueOptions});return i.restFlow=[r,...e],i}function V(r,e){return{type:"event",queue:r,vhost:e.vhost,inputMapping:e.inputMapping,outputMapping:e.outputMapping,errorMapping:e.errorMapping,queueParams:e.queueParams,queueOptions:e.queueOptions,onError(t){return{...this,errorQueue:t}}}}function ae(r){return{type:"param",name:r}}function se(r){return{type:"condition",...r}}function pe(r,...e){let t=r?.restFlow??[];for(let n of e)t=[...t,...n.restFlow];return{type:"composition",restFlow:t}}function ue(...r){function e(i){return Array.isArray(i)&&(K(i[0])||L(i[0]))}function t(i){return Array.isArray(i)&&!e(i)}return r.reduce((i,o)=>e(o)?i.concat([o]):t(o)?i.concat([o]):i.concat([[o]]),[])}var b=require("lodash"),le={passFlowVariables:!1,passErrorVariables:!0};function B(r,e,t){return e?Object.keys(e).reduce((n,i)=>{let o=e[i];if(ce(o)){let a=o["$push"],s=n[a]??[];return s instanceof Array?{...n,[a]:[...s,(0,E.default)(t,i)]}:{...n}}else if(me(o)){let a=o["$remove"],s=n[a]??[];return s instanceof Array?{...n,[a]:s.filter(p=>!(0,b.isEqual)(p,(0,E.default)(t,i)))}:{...n}}else{if(k(o))return{...n};if(Array.isArray(o)){let a=o.reduce((s,p)=>({...s,[p]:(0,E.default)(t,i)}),{});return{...n,...a}}return{...n,[o]:(0,E.default)(t,i)}}},r):r}function k(r){return(0,b.isObject)(r)&&!(r instanceof Array)}function ce(r){return k(r)&&!!r["$push"]}function me(r){return k(r)&&!!r["$remove"]}function G(r,e,t){return(r??[]).map(n=>{let i={inputData:w(e,n.inputMapping??{}),outputMapping:n.outputMapping,errorMapping:n.errorMapping,nextFlow:n.nextFlow,errorQueue:n.errorQueue,elseFlow:n.elseFlow,predicate:n.predicate,flowVariables:e,errorVariables:t};return{vhost:n.vhost,queue:n.queue,queueParams:w(e,n.queueParams??{}),event:i,queueOptions:n.queueOptions}})}async function Q(r,e,t,n){try{let i=t.inputData,o=await Promise.resolve(e(i,{ack:n,publish:de(t)}))??{},a=B(t.flowVariables??{},t.outputMapping,o),s=B(t.errorVariables??{},t.errorMapping,o);return t.predicate&&!(0,E.default)(a,t.predicate)?G(t.elseFlow??[],a,s):G(t.nextFlow??[],a,s)}catch(i){return console.error(`Error in consumer "${r}"`),console.error(i),[{queue:t.errorQueue??"Error/General",event:{inputData:{queue:r,error:{message:i?.message,stack:i?.stack,data:i.data},event:t}}}]}}function de(r){return async({event:e,options:t=le,queueParams:n,vhost:i})=>{t?.passErrorVariables&&(e.errorVariables=(0,b.isObject)(e.errorVariables)?Object.assign(r.errorVariables??{},e.errorVariables):r.errorVariables??{}),t?.passFlowVariables&&(e.flowVariables=(0,b.isObject)(e.flowVariables)?Object.assign(r.flowVariables??{},e.flowVariables):r.flowVariables??{}),await g.publish({vhost:i,queue:e.initQueue,queueParams:n??{},event:e})}}async function M({queue:r,queueParams:e,prefetchValue:t=0,explicitAck:n=!1,vhost:i,callback:o,queueOptions:a}){await g.consume({queue:r,queueParams:e,prefetchValue:t,ack:!0,vhost:i,explicitAck:n,queueOptions:a,callback:async(s,p)=>{console.info(`Consuming queue ${r}`);let u=await Q(r,o,s,p?.ack);for(let c of u)await g.publish(c)}})}var R={};D(R,{createActionExecutionData:()=>Te,createCodeContext:()=>j});var W=r=>({startTime:r.startTime,finishTime:r.finishTime,status:r.status,result:r?.twiddlebugResult?.result,errorCode:r?.twiddlebugResult?.errorCode,output:`${r?.twiddlebugResult?.result?JSON.stringify(r.twiddlebugResult.result)+`
`:""}${r?.twiddlebugResult?.stdout?r.twiddlebugResult.stdout+`
`:""}${r?.twiddlebugResult?.stderr?r.twiddlebugResult.stderr+`
`:""}`}),ge=r=>({usedPlugin:r.usedPlugin,method:r.method,params:r.params?.reduce((e,t)=>({...e,[t.name]:{...t,resolved:!(t.code||t.type==="vault")}}),{}),pluginSettings:r.pluginSettings?.reduce((e,t)=>({...e,[t.name]:{...t,resolved:t.type!=="vault"}}),{}),pluginAccount:r.pluginAccount}),j=({actions:r,actionResults:e=[],pipelineExecutionId:t,pipelineRevision:n,trigger:i,triggerPayload:o,configuration:a,inputs:s,configurations:p})=>{let u=r.reduce((c,l)=>{let T=e.filter(h=>h.actionId===l.uuid).pop(),m=T?W(T):{};return{[l.codeId]:{id:l.codeId,name:l.name,mandatory:l.mandatory,retries:l.retries,timeout:l.timeout,plugin:l.usedPlugin&&{name:l.usedPlugin.name,version:l.usedPlugin.version},...m,executions:e.filter(h=>h.actionId===l.uuid).map(W)},...c}},{});return{kaholo:{actions:u,pipeline:{id:n?.pipeline.id,name:n?.pipeline.name,configurations:p},execution:{id:t,inputs:s,agent:{name:n?.agent?.name,attributes:n?.agent?.attributes},trigger:{message:i,payload:o},configuration:a}},actions:u}},Te=({actionExecutionId:r,pipelineExecutionId:e,actionId:t,pipelineId:n,agentKey:i,pipelineRevision:o,actionRevision:a,actionResults:s,trigger:p,triggerPayload:u,configuration:c,inputs:l,configurations:T})=>({actionExecutionId:r,pipelineExecutionId:e,actionId:t,pipelineId:n,type:a.type,agentKey:i,condition:a.condition,preHook:a.preHook,postHook:a.postHook,retries:a.retries??0,timeout:a.timeout,pipelineRevision:o,codeContext:j({actions:o.actions,actionResults:s,pipelineExecutionId:e,pipelineRevision:o,trigger:p,triggerPayload:u,configuration:c,inputs:l,configurations:T}),...a.usedPlugin?ge(a):{}});var J=require("uuid");var Y=parseInt(process.env.RPC_REQUEST_TIMEOUT)||2e4,P=class extends Error{constructor({message:t,data:n}){super(t);Error.captureStackTrace&&Error.captureStackTrace(this,P),this.data=n,this.error=n.responseData?.error}};async function ye(r,e){await g.unsubscribe({vhost:r,queue:"RPC/Response/{requestId}",queueParams:{requestId:e}}),await g.deleteQueue({vhost:r,queue:"RPC/Response/{requestId}",queueParams:{requestId:e}})}async function I({requestVhost:r="events",responseVhost:e="events",requestQueue:t,queueParams:n,requestData:i,retries:o=0}){let a=(0,J.v4)(),s={expires:Y,durable:!1},u=q(V(t,{vhost:r,inputMapping:{requestId:"requestId",requestData:"requestData"},outputMapping:{ok:"ok",responseData:"responseData"}}),V("RPC/Response/{requestId}",{vhost:e,queueParams:{requestId:"requestId"},inputMapping:{ok:"ok",responseData:"responseData"},queueOptions:s}))({flowVariables:{requestData:i,requestId:a},params:{}});return await g.publish({vhost:r,queue:t,queueParams:n,event:u}),new Promise((c,l)=>{let T=setTimeout(()=>{o?(console.info(`Retrying RPC request because of timeout (${o-1} left)} ${t}`),I({requestVhost:r,responseVhost:e,requestQueue:t,queueParams:n,requestData:i,retries:o-1}).then(c).catch(l)):l(new Error(`Timeout reached waiting for RPC response for ${t} request`))},Y);M({vhost:e,queue:"RPC/Response/{requestId}",queueParams:{requestId:a},queueOptions:s,callback:m=>(clearTimeout(T),setTimeout(()=>{ye(e,a).catch(h=>console.error("Error during RPC cleanup",h))},1e3),m.ok?c(m.responseData):o?(console.info(`Retrying RPC request because of error (${o-1} left) "${t}"`,m.responseData?.error),I({requestVhost:r,responseVhost:e,requestQueue:t,queueParams:n,requestData:i,retries:o-1}).then(c).catch(l)):l(new P({message:`Error in RPC response for ${t} request`,data:m})),{})}).catch(m=>{l(m),console.error("Error during RPC response consumer registration",m)})})}0&&(module.exports={AmqpSdk,EventsWorker,VHOST,amqpSdk,eventsWorker,executionDataHelper,flowConsumer,flowHelpers,flowInterpreter,rpcRequest});
